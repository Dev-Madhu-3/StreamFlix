{"version":3,"sources":["components/Navbar/index.js","components/MovieCard/index.js","components/Home/index.js","components/TopratedMovies/index.js","components/UpComingMovies/index.js","components/SingleMoviePage/index.js","components/SearchedMovies/index.js","App.js","index.js"],"names":["withRouter","props","_useState","useState","_useState2","_slicedToArray","searchInput","setSearchInput","_jsxs","className","children","_jsx","Link","to","onSubmit","event","replace","history","preventDefault","concat","type","value","onChange","target","placeholder","RiSearchLine","MovieCard","movieDetails","title","posterPath","poster_path","voteAverage","vote_average","id","src","alt","Home","MoviesList","updateMoviesList","apiCall","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","ok","json","results","console","log","t0","message","stop","apply","arguments","useEffect","Navbar","map","eachItem","TopratedMovies","UpComingMovies","SingleMoviePage","movieData","setMovieData","_useState3","_useState4","castData","setcastData","match","movieId","apiKey","url2","url1","_yield$Promise$all","_yield$Promise$all2","response1","response2","_yield$Promise$all3","_yield$Promise$all4","rawData1","rawData2","data1","data2","params","Promise","all","releaseDate","release_date","overview","tagline","rating","budget","runtime","genre","genres","e","name","join","cast","characterName","character","profilePath","profile_path","crew","department","castCard","_ref2","Date","getFullYear","SearchedMovies","search","location","quaryValue","URLSearchParams","get","App","Switch","Route","exact","path","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.a9d272e4.chunk.js","sourcesContent":["import './index.css'\nimport {Link, withRouter} from 'react-router-dom'\nimport {RiSearchLine} from 'react-icons/ri'\nimport {useState} from 'react'\n\nfunction Navbar(props) {\n  const [searchInput, setSearchInput] = useState('')\n  const onInputChange = event => {\n    setSearchInput(event.target.value)\n  }\n  const onSearch = event => {\n    const {history} = props\n    const {replace} = history\n    event.preventDefault()\n    replace(`search?Q=${searchInput}`)\n  }\n\n  return (\n    <nav className=\"navbar-container\">\n      <div className=\"navbar-logo-links-container\">\n        <div className=\"navbar-logo\">StreamFlix</div>\n        <Link className=\"nav-item\" to=\"/\">\n          <div>Popular</div>\n        </Link>\n        <Link className=\"nav-item\" to=\"/toprated\">\n          <div>Top Rated</div>\n        </Link>\n        <Link className=\"nav-item\" to=\"/upcoming\">\n          <div>Upcoming</div>\n        </Link>\n      </div>\n\n      <form className=\"navbar-search-container\" onSubmit={onSearch}>\n        <input\n          type=\"search\"\n          value={searchInput}\n          onChange={onInputChange}\n          placeholder=\"Search\"\n          className=\"search-bar\"\n        />\n        <button className=\"search-bar-button\" type=\"submit\">\n          <RiSearchLine className=\"search-bar-icon\" />\n        </button>\n      </form>\n    </nav>\n  )\n}\n\nexport default withRouter(Navbar)\n","import './index.css'\nimport {Link} from 'react-router-dom'\n\nfunction MovieCard(props) {\n  const {movieDetails} = props\n  const {\n    title,\n    poster_path: posterPath,\n    vote_average: voteAverage,\n    id,\n  } = movieDetails\n  return (\n    <div className=\"movie-card-container\">\n      <img\n        className=\"movie-card-image\"\n        src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n        alt=\"movie poster\"\n      />\n      <div className=\"movie-details\">\n        <h1 className=\"title\">\n          Name: <span className=\"title-span\">{title}</span>\n        </h1>\n        <p className=\"rating\">\n          Rating:<span className=\"rating-span\">{` ${voteAverage} / 10`}</span>{' '}\n        </p>\n\n        <Link to={`/${id}`} className=\"details-btn\">\n          More Details\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default MovieCard\n","import {useState, useEffect} from 'react'\nimport './index.css'\nimport Navbar from '../Navbar'\nimport MovieCard from '../MovieCard'\n\nfunction Home() {\n  const [MoviesList, updateMoviesList] = useState([])\n\n  const apiCall = async () => {\n    try {\n      const response = await fetch(\n        'https://api.themoviedb.org/3/movie/popular?api_key=685fff8bd9824a25a6727a6555b1354c&language=en-US&page=1',\n      )\n      if (response.ok) {\n        const data = await response.json()\n        updateMoviesList(data.results)\n        console.log(data.results)\n      }\n    } catch (error) {\n      console.log(`Problem: ${error.message}`)\n    }\n  }\n\n  useEffect(() => {\n    apiCall()\n  }, [])\n\n  return (\n    // 685fff8bd9824a25a6727a6555b1354c\n    <div className=\"home-container\">\n      <Navbar />\n      <div className=\"responsive-container\">\n        <h1 className=\"home-heading\">Popular movies</h1>\n        <div className=\"home-popular-movies-container\">\n          {MoviesList.map(eachItem => (\n            <MovieCard key={eachItem.id} movieDetails={eachItem} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import {useState, useEffect} from 'react'\nimport Navbar from '../Navbar'\nimport MovieCard from '../MovieCard'\n\nfunction TopratedMovies() {\n  const [MoviesList, updateMoviesList] = useState([])\n\n  const apiCall = async () => {\n    try {\n      const response = await fetch(\n        'https://api.themoviedb.org/3/movie/top_rated?api_key=685fff8bd9824a25a6727a6555b1354c&language=en-US&page=1',\n      )\n      if (response.ok) {\n        const data = await response.json()\n        updateMoviesList(data.results)\n      }\n    } catch (error) {\n      console.log(`Problem: ${error.message}`)\n    }\n  }\n\n  useEffect(() => {\n    apiCall()\n  }, [])\n\n  return (\n    // 685fff8bd9824a25a6727a6555b1354c\n    <div className=\"home-container\">\n      <Navbar />\n      <div className=\"responsive-container\">\n        <h1 className=\"home-heading\">Top Rated Movies</h1>\n        <div className=\"home-popular-movies-container\">\n          {MoviesList.map(eachItem => (\n            <MovieCard key={eachItem.id} movieDetails={eachItem} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TopratedMovies\n","import {useState, useEffect} from 'react'\nimport Navbar from '../Navbar'\nimport MovieCard from '../MovieCard'\n\nfunction UpComingMovies() {\n  const [MoviesList, updateMoviesList] = useState([])\n\n  const apiCall = async () => {\n    try {\n      const response = await fetch(\n        'https://api.themoviedb.org/3/movie/upcoming?api_key=685fff8bd9824a25a6727a6555b1354c&language=en-US&page=1',\n      )\n      if (response.ok) {\n        const data = await response.json()\n        updateMoviesList(data.results)\n      }\n    } catch (error) {\n      console.log(`Problem: ${error.message}`)\n    }\n  }\n\n  useEffect(() => {\n    apiCall()\n  }, [])\n\n  return (\n    // 685fff8bd9824a25a6727a6555b1354c\n    <div className=\"home-container\">\n      <Navbar />\n      <div className=\"responsive-container\">\n        <h1 className=\"home-heading\">UpComing movies</h1>\n        <div className=\"home-popular-movies-container\">\n          {MoviesList.map(eachItem => (\n            <MovieCard key={eachItem.id} movieDetails={eachItem} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpComingMovies\n","import {useState, useEffect} from 'react'\nimport Navbar from '../Navbar'\n\nconst SingleMoviePage = props => {\n  const [movieData, setMovieData] = useState(0)\n  const [castData, setcastData] = useState(0)\n  const {match} = props\n  useEffect(() => {\n    const apiCall = async () => {\n      const movieId = match.params.id\n      const apiKey = '685fff8bd9824a25a6727a6555b1354c'\n      const url2 = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en`\n      const url1 = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-U`\n      const [response1, response2] = await Promise.all([\n        fetch(url1),\n        fetch(url2),\n      ])\n      const [rawData1, rawData2] = await Promise.all([\n        response1.json(),\n        response2.json(),\n      ])\n      const data1 = {\n        releaseDate: rawData1.release_date,\n        title: rawData1.title,\n        posterPath: rawData1.poster_path,\n        overview: rawData1.overview,\n        tagline: rawData1.tagline,\n        rating: rawData1.vote_average,\n        budget: rawData1.budget,\n        runtime: rawData1.runtime,\n        genre: `${rawData1.genres.map(e => e.name).join(', ')}`,\n      }\n      setMovieData(data1)\n      const data2 = {\n        cast: rawData2.cast.map(e => ({\n          name: e.name,\n          id: e.id,\n          characterName: e.character,\n          profilePath: e.profile_path,\n        })),\n        crew: rawData2.crew.map(e => ({\n          name: e.name,\n          id: e.id,\n          department: e.department,\n          profilePath: e.profile_path,\n        })),\n      }\n      setcastData(data2)\n      console.log(rawData2)\n    }\n\n    apiCall()\n  }, [])\n\n  const castCard = ({id, name, department, characterName, profilePath}) => (\n    <div className=\"castCard\" key={id}>\n      <img\n        src={`https://media.themoviedb.org/t/p/w138_and_h175_face${profilePath}`}\n        alt={name}\n      />\n      <p className=\"castName\">{name}</p>\n      {department ? (\n        <p className=\"castRealName\">{`Department: ${department}`}</p>\n      ) : (\n        <p className=\"castRealName\">{`Character: ${characterName}`}</p>\n      )}\n    </div>\n  )\n  if (castData) {\n    return (\n      <div className=\"single-movie-container\">\n        <Navbar />\n        <div className=\"banner-image-container\">\n          <img\n            className=\"banner-image\"\n            src={`https://image.tmdb.org/t/p/w500${movieData.posterPath}`}\n            alt=\"movieData.name\"\n          />\n          <div className=\"movie-details-container\">\n            <div className=\"movie-name-container\">\n              <p className=\"mv-name\">\n                <span>{movieData.title}</span>\n                {`(${new Date(movieData.releaseDate).getFullYear()})`}\n              </p>\n              <p className=\"mv tagline\">{movieData.tagline}</p>\n            </div>\n            <p className=\"disc\">{movieData.overview}</p>\n            <div className=\"details-con\">\n              <p>\n                Duration:{' '}\n                <span className=\"duration\">{`${movieData.runtime} M`}</span>\n              </p>\n              <p>\n                Release Date:{' '}\n                <span className=\"duration\">{movieData.releaseDate}</span>\n              </p>\n              <p>\n                Genre: <span className=\"duration\">{movieData.genre}</span>\n              </p>\n              <p>\n                Rating: <span className=\"duration\">{movieData.rating}</span>\n              </p>\n              <p>\n                Budget:{' '}\n                <span className=\"duration\">{`${movieData.budget}$`}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"cast-container\">\n          <h1>Cast</h1>\n          <div className=\"cast-crew-cards-container\">\n            {castData.cast.map(e => castCard(e))}\n          </div>\n          <h1>Crew</h1>\n          <div className=\"cast-crew-cards-container\">\n            {castData.crew.map(e => castCard(e))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default SingleMoviePage\n\n// https://api.themoviedb.org/3/movie/${MOVIE_ID}/credits?api_key=${API_KEY}&language=en\n","import {useState, useEffect} from 'react'\nimport Navbar from '../Navbar'\nimport MovieCard from '../MovieCard'\n\nfunction SearchedMovies(props) {\n  const [MoviesList, updateMoviesList] = useState([])\n  const {location} = props\n  const {search} = location\n  const extractQuary = new URLSearchParams(search)\n  const quaryValue = extractQuary.get('Q')\n\n  const apiCall = async () => {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=685fff8bd9824a25a6727a6555b1354c&language=en-US&query=${quaryValue}&page=1`,\n      )\n      if (response.ok) {\n        const data = await response.json()\n        updateMoviesList(data.results)\n      }\n    } catch (error) {\n      console.log(`Problem: ${error.message}`)\n    }\n  }\n\n  useEffect(() => {\n    apiCall()\n  }, [])\n\n  return (\n    // 685fff8bd9824a25a6727a6555b1354c\n    <div className=\"home-container\">\n      <Navbar />\n      <div className=\"responsive-container\">\n        <h1 className=\"home-heading\">{`Reasult for '${quaryValue}'`}</h1>\n        <div className=\"home-popular-movies-container\">\n          {MoviesList.map(eachItem => (\n            <MovieCard key={eachItem.id} movieDetails={eachItem} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchedMovies\n","import './App.css'\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './components/Home'\nimport TopratedMovies from './components/TopratedMovies'\nimport UpComingMovies from './components/UpComingMovies'\nimport SingleMoviePage from './components/SingleMoviePage'\nimport SearchedMovies from './components/SearchedMovies'\n// write your code here\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/toprated\" component={TopratedMovies} />\n    <Route exact path=\"/upcoming\" component={UpComingMovies} />\n    <Route exact path=\"/search\" component={SearchedMovies} />\n    <Route exact path=\"/:id\" component={SingleMoviePage} />\n  </Switch>\n)\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}